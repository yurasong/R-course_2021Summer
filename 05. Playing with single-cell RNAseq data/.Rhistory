install.packages("swirl")
library("swirl")
swirl()
citation()
citation(bioconductors)
citation(bioconductor)
require(gmp)
enrich_pvalue <- function(N, A, B, k)
{
m <- A + k
n <- B + k
i <- k:min(m,n)
as.numeric( sum(chooseZ(m,i)*chooseZ(N-m,n-i))/chooseZ(N,n) )
}
install.packages("gmp")
require(gmp)
enrich_pvalue <- function(N, A, B, k)
{
m <- A + k
n <- B + k
i <- k:min(m,n)
as.numeric( sum(chooseZ(m,i)*chooseZ(N-m,n-i))/chooseZ(N,n) )
}
enrich_pvalue(N=49671, A=1453, B=733, k=161)
enrich_pvalue(N=49671, A=899, B=594, k=198)
enrich_pvalue(N=49671, A=523, B=593, k=301)
enrich_pvalue(N=49671, A=716, B=1506, k=108)
enrich_pvalue(N=49671, A=867, B=583, k=209)
load("~/Bioinformatics team Dropbox/Projects/Alex-ER_signalling/Alex_1st_papier - USE THIS FOLDER PLEASE/CPDB/Aline scRNA - CPDB version2.1.2/All cell type - interaction in different cell types only/.RData")
p_top <- cpdb_plot2(top_interactions, pval_long_modi, means_long_modi) +
ggtitle("Heterotopic interactions, ordered by expression",
subtitle = "p < 0.05 for at least one cell-type pair") +
labs(
x = "Cell-type pair",
y = "Interaction",
col = "Mean R-L expression",
size = expression(-{} * "log"[10] * "(p-value)")
) +
theme(
plot.title = element_text(face = "bold", size = 16),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
axis.text.x = element_text(
angle = 45,
hjust = 1,
vjust = 1
))
p_top
install.packages("doMC", dep=T)
install.packages("caTools", dep=T)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("Rsamtools")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("BSgenome")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ShortRead")
setwd("~/Bioinformatics team Dropbox/Projects/Alex-ER_signalling/Alex_1st_papier - USE THIS FOLDER PLEASE/Ciara_Metcalfe_paper/E2 as a control/1E-2 - 100kb/ChIP-significant/overlap/our data")
c <- read.delim("count_annot_norm.csv", h=T, sep=",`")
c <- read.delim("count_annot_norm.csv", h=T, sep=",")
a <- read.delim("overlap_adult_our_annot.bed", h=F, sep="\t")
f <- read.delim("overlap_Fulv_our_annot.bed", h=F, sep="\t")
t <- read.delim("overlap_TAM_our_annot.bed", h=F, sep="\t")
head(c)
head(a)
ca <- merge(c, a, by.x="PeakID", by.y="PeakID", all.x=F)
ca <- merge(c, a, by.x="PeakID", by.y="V4", all.x=F)
cf <- merge(c, f, by.x="PeakID", by.y="V4", all.x=F)
ct <- merge(c, t, by.x="PeakID", by.y="V4", all.x=F)
write.table(ca, "overlap_adult_our.csv", quote=F, sep=",", row.names=F, col.names=T)
write.table(cf, "overlap_fulv_our.csv", quote=F, sep=",", row.names=F, col.names=T)
write.table(ct, "overlap_TAM_our.csv", quote=F, sep=",", row.names=F, col.names=T)
log(0.487/0.25)+log(0.603/0.25)+log(0.525/0.25)+log(0.691/0.25)+log(0.998/0.25)+3*log(1/0.25)+log(0.993/0.25)+log(0.424/0.25)+log(0.364/0.25)+log(0.322/0.25)+log(0.754/0.25)
setwd("~/Bioinformatics team Dropbox/Projects/Alex-ER_signalling/RNAseq new analysis new filter July20/comparison with previous papers/Gene list and expression/BC/retrial")
r <- read.delim("rnaseq.txt")
library(xlsx)
s <- read.xlsx("BC only in smalley.xlsx", 1, h=F)
v <- read.xlsx("BC only in visvader.xlsx", 1, h=F)
sr <- merge(s, r, by.x="X1", by.y="Associated.Gene.Name", all.x=F)
vr <- merge(v, r, by.x="X1", by.y="Associated.Gene.Name", all.x=F)
setwd("~/Bioinformatics team Dropbox/Yura Song/ERsignaling-project-summary/treat LC ER+/ATAC - RNA/Gene-Peak list/Peak-Gene")
library(xlsx)
setwd("~/Bioinformatics team Dropbox/Yura Song/ERsignaling-project-summary/treat LC ER+/ATAC - RNA/Gene-Peak list")
exp <- read.delim("Treatment_merge_RNAseq_all.txt")
head(exp)
setwd("~/Bioinformatics team Dropbox/Yura Song/ERsignaling-project-summary/treat LC ER+/ATAC - RNA/Gene-Peak list/Peak-Gene/TAM")
pu <- read.delim("PeakUp_TAM_LCER+.txt")
pd <- read.delim("PeakDown_TAM_LCER+.xlsx")
pd <- read.xlsx("PeakDown_TAM_LCER+.xlsx", 1)
gu <- read.xlsx("UP only in LCER+ TAM over adult.xlsx", 1, h=F)
gd <- read.xlsx("DO only in LCER+ TAM over adult.xlsx", 1, h=F)
head(gu)
names(exp)
gu <- merge(exp, gu, by.x="Associated.Gene.Name", by.y="X1", all.x=F)
gd <- merge(exp, gd, by.x="Associated.Gene.Name", by.y="X1", all.x=F)
head(gu)
names(pu)
pugu <- merge(pu, gu, by.x="Gene", by.y="Associated.Gene.Name", all.x=F``)
pugu <- merge(pu, gu, by.x="Gene", by.y="Associated.Gene.Name", all.x=F)
pugd <- merge(pu, gd, by.x="Gene", by.y="Associated.Gene.Name", all.x=F)
pdgu <- merge(pd, gu, by.x="Gene", by.y="Associated.Gene.Name", all.x=F)
pdgd <- merge(pd, gd, by.x="Gene", by.y="Associated.Gene.Name", all.x=F)
write.xlsx(pugu, "PeakUp_GeneUp_TAM_LCER+.xlsx", col.names=T, row.names=F, append=F)
write.xlsx(pugd, "PeakUp_GeneDown_TAM_LCER+.xlsx", col.names=T, row.names=F, append=F)
write.xlsx(pdgu, "PeakDown_GeneUp_TAM_LCER+.xlsx", col.names=T, row.names=F, append=F)
write.xlsx(pdgd, "PeakDown_GeneDown_TAM_LCER+.xlsx", col.names=T, row.names=F, append=F)
setwd("~/Bioinformatics team Dropbox/Yura Song/ERsignaling-project-summary/treat LC ER+/ATAC - RNA/Gene-Peak list/Peak-Gene/RUTAM")
pu <- read.xlsx("PeakUp_RUTAM_LCER+.xlsx", 1)
pd <- read.delim("PeakDown_RUTAM_LCER+.txt")
gu <- read.xlsx("UP only in LCER+ RUTAM over adult.xlsx", 1, h=F)
gu <- read.xlsx("UP only in LCER+ - RUTAM over adult.xlsx", 1, h=F)
gd <- read.xlsx("DO only in LCER+ - RUTAM over adult.xlsx", 1, h=F)
gu <- merge(exp, gu, by.x="Associated.Gene.Name", by.y="X1", all.x=F)
gd <- merge(exp, gd, by.x="Associated.Gene.Name", by.y="X1", all.x=F)
pugu <- merge(pu, gu, by.x="Gene", by.y="Associated.Gene.Name", all.x=F)
pugd <- merge(pu, gd, by.x="Gene", by.y="Associated.Gene.Name", all.x=F)
pdgu <- merge(pd, gu, by.x="Gene", by.y="Associated.Gene.Name", all.x=F)
pdgd <- merge(pd, gd, by.x="Gene", by.y="Associated.Gene.Name", all.x=F)
write.xlsx(pugu, "PeakUp_GeneUp_RUTAM_LCER+.xlsx", col.names=T, row.names=F, append=F)
write.xlsx(pugd, "PeakUp_GeneDown_RUTAM_LCER+.xlsx", col.names=T, row.names=F, append=F)
write.xlsx(pdgu, "PeakDown_GeneUp_RUTAM_LCER+.xlsx", col.names=T, row.names=F, append=F)
write.xlsx(pdgd, "PeakDown_GeneDown_RUTAM_LCER+.xlsx", col.names=T, row.names=F, append=F)
setwd("~/Bioinformatics team Dropbox/Yura Song/ERsignaling-project-summary/treat LC ER+/ATAC - RNA/Gene-Peak list/Peak-Gene/RU")
gu <- read.xlsx("UP only in LCER+ - RU over adult.xlsx", 1, h=F)
gu <- read.xlsx("UP Only in LCER+ - RU over adult.xlsx", 1, h=F)
gd <- read.xlsx("DO Only in LCER+ - RU over adult.xlsx", 1, h=F)
gu <- read.xlsx("UP Only in LCER+ RU over adult.xlsx", 1, h=F)
gu <- merge(exp, gu, by.x="Associated.Gene.Name", by.y="X1", all.x=F)
gd <- merge(exp, gd, by.x="Associated.Gene.Name", by.y="X1", all.x=F)
pugu <- merge(pu, gu, by.x="Gene", by.y="Associated.Gene.Name", all.x=F)
pugd <- merge(pu, gd, by.x="Gene", by.y="Associated.Gene.Name", all.x=F)
pdgu <- merge(pd, gu, by.x="Gene", by.y="Associated.Gene.Name", all.x=F)
pdgd <- merge(pd, gd, by.x="Gene", by.y="Associated.Gene.Name", all.x=F)
write.xlsx(pugu, "PeakUp_GeneUp_RU_LCER+.xlsx", col.names=T, row.names=F, append=F)
write.xlsx(pugd, "PeakUp_GeneDown_RU_LCER+.xlsx", col.names=T, row.names=F, append=F)
write.xlsx(pdgu, "PeakDown_GeneUp_RU_LCER+.xlsx", col.names=T, row.names=F, append=F)
write.xlsx(pdgd, "PeakDown_GeneDown_RU_LCER+.xlsx", col.names=T, row.names=F, append=F)
setwd("~/Bioinformatics team Dropbox/Yura Song/ERsignaling-project-summary/treat LC ER+/ATAC - RNA/Gene-Peak list/Peak-Gene/FULV")
gu <- read.xlsx("UP Only in LCER+ Fulv over adult.xlsx", 1, h=F)
gd <- read.xlsx("DO Only in LCER+ Fulv over adult.xlsx", 1, h=F)
pu <- read.xlsx("PeakUp_Fulv_LCER+.xlsx")
pu <- read.xlsx("PeakUp_Fulv_LCER+.xlsx", 1)
pd <- read.delim("PeakDown_Fulv_LCER+.txt")
gu <- merge(exp, gu, by.x="Associated.Gene.Name", by.y="X1", all.x=F)
gd <- merge(exp, gd, by.x="Associated.Gene.Name", by.y="X1", all.x=F)
pugu <- merge(pu, gu, by.x="Gene", by.y="Associated.Gene.Name", all.x=F)
pugd <- merge(pu, gd, by.x="Gene", by.y="Associated.Gene.Name", all.x=F)
pdgu <- merge(pd, gu, by.x="Gene", by.y="Associated.Gene.Name", all.x=F)
pdgd <- merge(pd, gd, by.x="Gene", by.y="Associated.Gene.Name", all.x=F)
write.xlsx(pugu, "PeakUp_GeneUp_Fulv_LCER+.xlsx", col.names=T, row.names=F, append=F)
write.xlsx(pugd, "PeakUp_GeneDown_Fulv_LCER+.xlsx", col.names=T, row.names=F, append=F)
write.xlsx(pdgu, "PeakDown_GeneUp_Fulv_LCER+.xlsx", col.names=T, row.names=F, append=F)
write.xlsx(pdgd, "PeakDown_GeneDown_Fulv_LCER+.xlsx", col.names=T, row.names=F, append=F)
setwd("~/Bioinformatics team Dropbox/Yura Song/ERsignaling-project-summary/treat LC ER+/ATAC - RNA/Gene-Peak list/Peak-Gene/RU")
gu <- read.xlsx("UP Only in LCER+ - RU over adult.xlsx", 1, h=F)
gu <- read.xlsx("UP Only in LCER+ RU over adult.xlsx", 1, h=F)
gd <- read.xlsx("DO Only in LCER+ - RU over adult.xlsx", 1, h=F)
pu <- read.xlsx("PeakUp_RU_LCER+.xlsx", 1)
pd <- read.delim("PeakDown_RU_LCER+.txt")
gu <- merge(exp, gu, by.x="Associated.Gene.Name", by.y="X1", all.x=F)
gd <- merge(exp, gd, by.x="Associated.Gene.Name", by.y="X1", all.x=F)
pugu <- merge(pu, gu, by.x="Gene", by.y="Associated.Gene.Name", all.x=F)
pugd <- merge(pu, gd, by.x="Gene", by.y="Associated.Gene.Name", all.x=F)
pdgu <- merge(pd, gu, by.x="Gene", by.y="Associated.Gene.Name", all.x=F)
pdgd <- merge(pd, gd, by.x="Gene", by.y="Associated.Gene.Name", all.x=F)
write.xlsx(pugu, "PeakUp_GeneUp_RU_LCER+.xlsx", col.names=T, row.names=F, append=F)
write.xlsx(pugd, "PeakUp_GeneDown_RU_LCER+.xlsx", col.names=T, row.names=F, append=F)
write.xlsx(pdgu, "PeakDown_GeneUp_RU_LCER+.xlsx", col.names=T, row.names=F, append=F)
write.xlsx(pdgd, "PeakDown_GeneDown_RU_LCER+.xlsx", col.names=T, row.names=F, append=F)
setwd("~/Bioinformatics team Dropbox/Yura Song/ERsignaling-project-summary/treat LC ER+/ATAC - RNA/Gene-Peak list/Peak-Gene/RUTAM")
gu <- read.xlsx("UP Only in LCER+ - RUTAM over adult.xlsx", 1, h=F)
gd <- read.xlsx("DO Only in LCER+ - RUTAM over adult.xlsx", 1, h=F)
pu <- read.xlsx("PeakUp_RUTAM_LCER+.xlsx", 1)
pd <- read.delim("PeakDown_RUTAM_LCER+.txt")
gu <- merge(exp, gu, by.x="Associated.Gene.Name", by.y="X1", all.x=F)
gd <- merge(exp, gd, by.x="Associated.Gene.Name", by.y="X1", all.x=F)
pugu <- merge(pu, gu, by.x="Gene", by.y="Associated.Gene.Name", all.x=F)
pugd <- merge(pu, gd, by.x="Gene", by.y="Associated.Gene.Name", all.x=F)
pdgu <- merge(pd, gu, by.x="Gene", by.y="Associated.Gene.Name", all.x=F)
pdgd <- merge(pd, gd, by.x="Gene", by.y="Associated.Gene.Name", all.x=F)
write.xlsx(pugu, "PeakUp_GeneUp_RUTAM_LCER+.xlsx", col.names=T, row.names=F, append=F)
write.xlsx(pugd, "PeakUp_GeneDown_RUTAM_LCER+.xlsx", col.names=T, row.names=F, append=F)
write.xlsx(pdgu, "PeakDown_GeneUp_RUTAM_LCER+.xlsx", col.names=T, row.names=F, append=F)
write.xlsx(pdgd, "PeakDown_GeneDown_RUTAM_LCER+.xlsx", col.names=T, row.names=F, append=F)
setwd("~/Bioinformatics team Dropbox/Projects/Alex-ER_signalling/RNAseq new analysis new filter July20/possible enhancers - update 2020 Nov/cell types/Adult")
library(xlsx)
atac <- read.deliim("Adult.txt")
atac <- read.delim("Adult.txt")
bc <- read.xlsx("Adult BC specific signature.xlsx", 1, h=F)
lcp <- read.xlsx("Adult LCER- specific signature.xlsx", 1, h=F)
lcp <- read.xlsx("Adult LCER+ specific signature.xlsx", 1, h=F)
lcm <- read.xlsx("Adult LCER- specific signature.xlsx", 1, h=F)
lc <- read.xlsx("Adult common LC signature.xlsx", 1, h=F)
head(atac)
head(lcp)
bc_c <- merge(atac, bc, by.x="Gene", by.y="X1", all.x=F)
lcp_c <- merge(atac, lcp, by.x="Gene", by.y="X1", all.x=F)
lcm_c <- merge(atac, lcm, by.x="Gene", by.y="X1", all.x=F)
lc_c <- merge(atac, lc, by.x="Gene", by.y="X1", all.x=F)
write.xlsx(bc_c, "Peaks_annot_adult_BC_sig.xlsx", row.names=F)
write.table(bc_c, "Peaks_annot_adult_BC_sig.xlsx", quote=F, sep=",", row.names=F, col.names=)
write.table(bc_c, "Peaks_annot_adult_BC_sig.xlsx", quote=F, sep=",", row.names=F, col.names=T)
write.table(lcp_c, "Peaks_annot_adult_LC+_sig.xlsx", quote=F, sep=",", row.names=F, col.names=T)
write.table(lcm_c, "Peaks_annot_adult_LC-_sig.xlsx", quote=F, sep=",", row.names=F, col.names=T)
write.table(lc_c, "Peaks_annot_adult_LC_common_sig.xlsx", quote=F, sep=",", row.names=F, col.names=T)
write.table(bc_c, "Peaks_annot_adult_BC_sig.csv", quote=F, sep=",", row.names=F, col.names=T)
write.table(lcp_c, "Peaks_annot_adult_LC+_sig.csv", quote=F, sep=",", row.names=F, col.names=T)
write.table(lcm_c, "Peaks_annot_adult_LC-_sig.csv", quote=F, sep=",", row.names=F, col.names=T)
write.table(lc_c, "Peaks_annot_adult_LC_common_sig.csv", quote=F, sep=",", row.names=F, col.names=T)
setwd("~/Bioinformatics team Dropbox/Projects/Alex-ER_signalling/RNAseq new analysis new filter July20/possible enhancers - update 2020 Nov/cell types/Preg")
rm(list=ls())
atac <- read.deliim("Preg.txt")
atac <- read.delim("Preg.txt")
bc <- read.xlsx("Pregn BC specific signature.xlsx", 1, h=F)
bc <- read.xlsx("Pregn BC specific.xlsx", 1, h=F)
lcp <- read.xlsx("Pregnancy LCER+ specific signature.xlsx", 1, h=F)
lcm <- read.xlsx("Pregn LCER- specific signature.xlsx", 1, h=F)
lc <- read.xlsx("Pregnancy common LC signature.xlsx", 1, h=F)
bc_c <- merge(atac, bc, by.x="Gene", by.y="X1", all.x=F)
lcp_c <- merge(atac, lcp, by.x="Gene", by.y="X1", all.x=F)
lcm_c <- merge(atac, lcm, by.x="Gene", by.y="X1", all.x=F)
lc_c <- merge(atac, lc, by.x="Gene", by.y="X1", all.x=F)
write.table(bc_c, "Peaks_annot_Preg_BC_sig.csv", quote=F, sep=",", row.names=F, col.names=T)
write.table(lcp_c, "Peaks_annot_Preg_LC+_sig.csv", quote=F, sep=",", row.names=F, col.names=T)
write.table(lcm_c, "Peaks_annot_Preg_LC-_sig.csv", quote=F, sep=",", row.names=F, col.names=T)
write.table(lc_c, "Peaks_annot_Preg_LC_common_sig.csv", quote=F, sep=",", row.names=F, col.names=T)
setwd("~/Bioinformatics team Dropbox/Projects/Alex-ER_signalling/RNAseq new analysis new filter July20/possible enhancers - update 2020 Nov/cell types/Pub")
rm(list=ls())
atac <- read.delim("Pub.txt")
bc <- read.xlsx("Pub BC specific.xlsx", 1, h=F)
bc <- read.xlsx("Pub BC specific signature.xlsx", 1, h=F)
lcp <- read.xlsx("Pub LCER+ specific signature.xlsx", 1, h=F)
lcm <- read.xlsx("Pub LCER- specific signature.xlsx", 1, h=F)
lc <- read.xlsx("Pub common LC signature.xlsx", 1, h=F)
bc_c <- merge(atac, bc, by.x="Gene", by.y="X1", all.x=F)
lcp_c <- merge(atac, lcp, by.x="Gene", by.y="X1", all.x=F)
lcm_c <- merge(atac, lcm, by.x="Gene", by.y="X1", all.x=F)
lc_c <- merge(atac, lc, by.x="Gene", by.y="X1", all.x=F)
write.table(bc_c, "Peaks_annot_Pub_BC_sig.csv", quote=F, sep=",", row.names=F, col.names=T)
write.table(lcp_c, "Peaks_annot_Pub_LC+_sig.csv", quote=F, sep=",", row.names=F, col.names=T)
write.table(lcm_c, "Peaks_annot_Pub_LC-_sig.csv", quote=F, sep=",", row.names=F, col.names=T)
write.table(lc_c, "Peaks_annot_Pub_LC_common_sig.csv", quote=F, sep=",", row.names=F, col.names=T)
setwd("~/Bioinformatics team Dropbox/Projects/Alex-ER_signalling/RNAseq new analysis new filter July20/possible enhancers - update 2020 Nov/cell types/Common")
(list=ls())
rm(list=ls())
atac <- read.delim("normalized_annot_counts_final.txt")
bc <- read.xlsx("Common BC specific in pub adult and pregn.xlsx", 1, h=F)
lcp <- read.xlsx("Common LCER+ specific pub adult and pregn.xlsx", 1, h=F)
lcm <- read.xlsx("Common LCER- specific in pub adult and pregn.xlsx", 1, h=F)
lc <- read.xlsx("Common LC signature pub adult and pregn.xlsx", 1, h=F)
bc_c <- merge(atac, bc, by.x="Gene", by.y="X1", all.x=F)
lcp_c <- merge(atac, lcp, by.x="Gene", by.y="X1", all.x=F)
lcm_c <- merge(atac, lcm, by.x="Gene", by.y="X1", all.x=F)
lc_c <- merge(atac, lc, by.x="Gene", by.y="X1", all.x=F)
write.table(bc_c, "Peaks_annot_common_BC_sig.csv", quote=F, sep=",", row.names=F, col.names=T)
write.table(lcp_c, "Peaks_annot_common_LC+_sig.csv", quote=F, sep=",", row.names=F, col.names=T)
write.table(lcm_c, "Peaks_annot_common_LC-_sig.csv", quote=F, sep=",", row.names=F, col.names=T)
write.table(lc_c, "Peaks_annot_common_LC_common_sig.csv", quote=F, sep=",", row.names=F, col.names=T)
setwd("~/Bioinformatics team Dropbox/Projects/Alex-ER_signalling/RNAseq new analysis new filter July20/possible enhancers - update 2020 Nov/stages/Adult/Adult over puberty")
?merge
?tidyverse
library(tidyverse)
library(Seurat)
library(ggplot2)
library(patchwork)
library(tidyverse)
library(data.table)
library(magrittr)
load("~/Bioinformatics team Dropbox/Projects/Alessia_Elsa - scRNA/Alessia/tmp/Integration_Alessia.RData")
DimPlot(ale.combined, reduction = "umap", split.by = "sample")
p1 + p2
q
p1
setwd("~/Bioinformatics team Dropbox/Yura Song/CORENTIN - PROJECT/NR2F2 Revision/ATACseq/Update_May10")
c <- read.delim("rawcount.txt", h=T)
a <- read.delim("Annotation/great_annot.txt",  h=F)
a <- read.delim("Annotation/great_annot.txt",  h=F, sep=",")
m <- read.delim("Annotation/merge1.bed", h=F)
head(c)
head(a)
head(m)
ma <- merge(m, a, by.x="V4", by.y="V1", all.x=T)
cma <- merge(c, ma, by.x="PeakID", by.y="V4", all.x=T)
i <- read.delim("ispeak_Dox1.bed", h=F)
i <- cbind(i, "Dox1")
m1 <- merge(cma, i[,4:5], by.x="PeakID", by.y="V4", all.x=T)
head(m1)
i <- read.delim("ispeak_Dox2.bed", h=F)
i <- cbind(i, "Dox2")
m2 <- merge(m1, i[,4:5], by.x="PeakID", by.y="V4", all.x=T)
m2 <- unique(m2)
i <- read.delim("ispeak_Nodox1.bed", h=F)
i <- cbind(i, "Nodox1")
m1 <- merge(m2, i[,4:5], by.x="PeakID", by.y="V4", all.x=T)
i <- read.delim("ispeak_Nodox2.bed", h=F)
i <- cbind(i, "Nodox2")
m2 <- merge(m1, i[,4:5], by.x="PeakID", by.y="V4", all.x=T)
m2 <- unique(m2)
write.table(m2, "Annot_Normalized_ATAC_NR2F2.csv", quote=F, sep="\t", row.names=F, col.names=T)
up <- 1656+5+206
down <- 1554+5+303
chIP <- 206+303+2089
dhyper(206, ChIP, 2392,  up)
dhyper(206, chIP, 2392,  up)
1656+209
1664+303
dhyper(5, up, 1865, down)
m <- 2089+206
dhyper(303, chIP, m, down)
install.packages("ggplot")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.13")
install.packages("tidyverse")
BiocManager::install("DESeq2")
install.packages(c("Matrix", "patchwork", "clustree"))
install.packages("dplyr")
install.packages("data.table")
install.packages("magrittr")
install.packages("data.table")
install.packages("magrittr")
BiocManager::install("limma")
BiocManager::install("affy")
BiocManager::install("BSgenome.Hsapiens.UCSC.hg38")
BiocManager::install("BSgenome.Mmusculus.UCSC.mm10")
BiocManager::install("apeglm")
install.packages("xlsx")
install.packages('Seurat')
BiocManager::install(c('BiocGenerics', 'DelayedArray', 'DelayedMatrixStats',
'limma', 'S4Vectors', 'SingleCellExperiment',
'SummarizedExperiment', 'batchelor', 'Matrix.utils'))
BiocManager::install("BiocGenerics")
install.packages("devtools")
devtools::install_github('cole-trapnell-lab/leidenbase')
BiocManager::install("GenVisR")
BiocManager::install("GRENITS")
BiocManager::install("SingleCellSignalR")
BiocManager::install("tigre")
BiocManager::install(c('BiocGenerics', 'DelayedArray', 'DelayedMatrixStats',
'limma', 'S4Vectors', 'SingleCellExperiment',
'SummarizedExperiment', 'batchelor', 'Matrix.utils'))
BiocManager::install(c('BiocGenerics', 'DelayedArray', 'DelayedMatrixStats',
'limma', 'S4Vectors', 'SingleCellExperiment',
'SummarizedExperiment', 'batchelor', 'Matrix.utils'), force=T)
devtools::install_github('cole-trapnell-lab/leidenbase')
BiocManager::install("GenVisR")
BiocManager::install("GenVisR", force=T)
devtools::install_github('cole-trapnell-lab/leidenbase')
devtools::install_github('cole-trapnell-lab/leidenbase')
devtools::install_github('cole-trapnell-lab/leidenbase')
?prcomp
install.packages("BiocManager")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.10")
BiocManager::install(c('BiocGenerics', 'DelayedArray', 'DelayedMatrixStats',
'limma', 'S4Vectors', 'SingleCellExperiment',
'SummarizedExperiment', 'batchelor', 'Matrix.utils'))
BiocManager::install(c('BiocGenerics', 'DelayedArray', 'DelayedMatrixStats',
'limma', 'S4Vectors', 'SingleCellExperiment',
'SummarizedExperiment', 'batchelor', 'Matrix.utils'))
library(BiocManager)
BiocManager::install(c('BiocGenerics', 'DelayedArray', 'DelayedMatrixStats',
'limma', 'S4Vectors', 'SingleCellExperiment',
'SummarizedExperiment', 'batchelor', 'Matrix.utils'))
devtools::install_github('cole-trapnell-lab/leidenbase')
setwd("~/Desktop/Lab/R-course_2021Summer/05. Playing with single-cell RNAseq data")
setwd("~/Desktop/Lab/R-course_2021Summer/05. Playing with single-cell RNAseq data/single-cell RNA run")
library(Seurat)
library(ggplot2)
library(patchwork)
library(tidyverse)
library(data.table)
library(magrittr)
project <- "control_res0.3"
res_value <- 0.3
datapath <- "filtered_feature_bc_matrix/"
data <- Read10X(data.dir = datapath)
# Initialize the Seurat object with the raw (non-normalized data).
# min.cells = each gene should at least be expressed in 3 cells.
# min.features= at least 200 gene should be expressed in each cell.
knitr::opts_knit$set(root.dir = datapath)
dir.create(project)
datapath <- paste(datapath,project,sep = "")
mar_ctl <- CreateSeuratObject(counts = data, project = "mar_ctl", min.cells = 3,
min.features = 200)
mar_ctl
mar_ctl[["percent.mt"]] <- PercentageFeatureSet(mar_ctl, pattern = "^mt-")
mar_ctl
# Visualize QC metrics as a violin plot
VlnPlot(mar_ctl, features = c("nFeature_RNA","nCount_RNA","percent.mt"),ncol = 3)
## In this plot we should have some mt genes, if it was zero we have to check the Human and Mouse.
plot1 <- FeatureScatter(mar_ctl, feature1 = "nCount_RNA", feature2 = "percent.mt")
plot1
plot2 <- FeatureScatter(mar_ctl, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
plot2
plot3 <- FeatureScatter(mar_ctl, feature1 = "nFeature_RNA", feature2 = "percent.mt")
plot3
mar_ctl
mar_ctl <- subset(mar_ctl, subset = nFeature_RNA > 1000 &  nFeature_RNA < 6000   &   percent.mt < 10)
mar_ctl
backup <- mar_ctl
VlnPlot(mar_ctl, features = c("nFeature_RNA","nCount_RNA","percent.mt"),ncol = 3)
plot1 <- FeatureScatter(mar_ctl, feature1 = "nCount_RNA", feature2 = "percent.mt")
plot1
plot2 <- FeatureScatter(mar_ctl, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
plot2
plot3 <- FeatureScatter(mar_ctl, feature1 = "nFeature_RNA", feature2 = "percent.mt")
plot3
## We normaly use logTransform and we don't change scale factor.
mar_ctl <- NormalizeData(mar_ctl, normalization.method = "LogNormalize", scale.factor = 10000)
mar_ctl <- NormalizeData(mar_ctl)
## We use VST in order, we may not change nfeatures =2000, its fine.
mar_ctl <- FindVariableFeatures(mar_ctl, selection.method = "vst", nfeatures = 2000)
# Identify the 10 most highly variable genes
top10 <- head(VariableFeatures(mar_ctl), 10)
# plot variable features with and without labels
plot1 <- VariableFeaturePlot(mar_ctl)
plot1
top10 <- head(VariableFeatures(mar_ctl), 10)
plot2 <- LabelPoints(plot = plot1, points = top10, repel = TRUE)
plot2
all.genes <- rownames(mar_ctl)
mar_ctl <- ScaleData(mar_ctl, features = all.genes)
mar_ctl <- RunPCA(mar_ctl, features = VariableFeatures(object = mar_ctl))
# Examine and visualize PCA results a few different ways
print(mar_ctl[["pca"]], dims = 1:5, nfeatures = 5)
VizDimLoadings(mar_ctl, dims = 1:2, reduction = "pca")
##the point is that we should only see the genes were mostly we interest in.
# For example if working on the cancer, the best is to see the cancer related genes.
VizDimLoadings(mar_ctl, dims = 3:4, reduction = "pca")
##the point is that we should only see the genes were mostly we interest in.
# For example if working on the cancer, the best is to see the cancer related genes.
pcaplot <- function(x)
{
DimPlot(mar_ctl, reduction = "pca",dims = x)
}
f <- list(c(1,2),c(1,3),c(2,3),c(1,4),c(2,4),c(3,4))
lapply(f, pcaplot)
ElbowPlot(mar_ctl,ndim=40)
saveRDS("Preproceeded_scRNA.rds")
saveRDS(mar_ctl, "Preproceeded_scRNA.rds")
setwd("~/Desktop/Lab/R-course_2021Summer/05. Playing with single-cell RNAseq data")
seuset <- readRDS("Preproceeded_scRNA.rds")
seuset <- readRDS("Preproceeded_scRNA.rds")
seuset
library(Seurat)
library(ggplot2)
library(patchwork)
library(tidyverse)
library(data.table)
library(magrittr)
seuset <- readRDS("Preproceeded_scRNA.rds")
seuset
ElbowPlot(seuset)
ElbowPlot(seuset, ndims = 40)
seuset <- FindNeighbors(seuset, dims = 1:30)
seuset <- FindClusters(seuset, resolution = 0.3)
seuset <- RunUMAP(seuset, dims = 1:30)
DimPlot(seuset, reduction = "umap", label = TRUE, label.size = 4)
## extract meta data
md <- seuset@meta.data %>% as.data.table
# the resulting md object has one "row" per cell
## count the number of cells per unique combinations of "Sample" and "seurat_clusters"
md[, .N, by = c( "seurat_clusters")]
md
md
top50 <- seuset.markers %>% group_by(cluster) %>% top_n(n = 50, wt = avg_log2FC)
seuset.markers <- FindAllMarkers(seuset, only.pos = TRUE, min.pct = 0.25, logfc.threshold = 0.25)
top50 <- seuset.markers %>% group_by(cluster) %>% top_n(n = 50, wt = avg_log2FC)
head(top50)
write.table(top50, "Top50_Markers_cluster.csv", quote=F, sep=",", row.names=F, col.names=T)
VlnPlot(seuset, features = "Esr1")
VlnPlot(seuset, features = c("Esr1", "Acta2", "Elf5"))
VlnPlot(seuset, features = c("Esr1", "Acta2", "Elf5"), ncol=1)
VlnPlot(seuset, features = c("Esr1", "Acta2", "Elf5"), ncol=1)
VlnPlot(seuset, features = c("Esr1", "Acta2", "Elf5"), ncol=1)
FeaturePlot(seuset, features = c("Esr1", "Pgr", "Acta2", "Elf5"), ncol=2)
names(seuset@meta.data)
filt.seuset <- seuset[, seuset$RNA_snn_res.0.3 %in% c(1, 3, 8)]
?FindVariableFeatures
filt.seuset <- FindVariableFeatures(filt.seuset, selection.method = "vst", nfeatures = 1000)
all.genes <- rownames(filt.seuset)
filt.seuset <- ScaleData(filt.seuset, features = all.genes)
filt.seuset <- RunPCA(filt.seuset, features = VariableFeatures(object = filt.seuset))
ElbowPlot(filt.seuset,ndim=40)
filt.seuset <- FindNeighbors(filt.seuset, dims = 1:30, k.param = 5)
filt.seuset <- FindClusters(filt.seuset, resolution = 0.3)
filt.seuset <- RunUMAP(filt.seuset, dims = 1:30)
DimPlot(filt.seuset, reduction = "umap",label = T,label.size = 4)
seuset.markers <- FindAllMarkers(filt.seuset, only.pos = TRUE, min.pct = 0.25, logfc.threshold = 0.25)
seuset.filt.markers <- FindAllMarkers(filt.seuset, only.pos = TRUE, min.pct = 0.25, logfc.threshold = 0.25)
top10 <- filt.seuset.markers %>% group_by(cluster) %>% top_n(n = 10, wt = avg_log2FC)
top10 <- seuset.filt.markers %>% group_by(cluster) %>% top_n(n = 10, wt = avg_log2FC)
DoHeatmap(filt.seuset, features = top10$gene) + NoLegend()
ggsave(filename = "Heatmap_top10_genes.pdf",width = 12, height = 15, units = "cm")
ggsave(filename = "Heatmap_top10_genes.pdf", width = 20, height = 15, units = "cm")
ggsave(filename = "Heatmap_top10_genes.pdf", width = 25, height = 15, units = "cm")
ggsave(filename = "Heatmap_top10_genes.pdf", width = 25, height = 35, units = "cm")
VlnPlot(seuset, features = "Esr1")
VlnPlot(filt.seuset, features = "Esr1")
VlnPlot(filt.seuset, features = c("Esr1", "Acta2", "Elf5"), ncol=1)
FeaturePlot(filt.seuset, features = c("Esr1", "Pgr", "Acta2", "Elf5"), ncol=2)
sessionInfo()
save.image("Practice_scRNA_Day5.RData")
